{"version":3,"sources":["components/Homepage/index.module.scss","components/TikTacToe/index.module.scss","components/TikTacToe/Box.js","components/TikTacToe/winner.js","components/TikTacToe/index.js","components/Homepage/index.js","routes/Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TikTacToe","state","value","boxClick","props","lastValue","canModified","id","setState","setFilledValue","className","s","col","onClick","this","React","PureComponent","checkWinner","arr","winner","forEach","winners","indexes","split","id00","id01","id10","id11","id20","id21","boxArr","filledArray","backupState","resetIt","back","window","history","row","Number","push","pop","length","prevProps","prevState","forceUpdate","parent","container","disable","map","key","slice","reset","Homepage","to","Routes","basename","exact","path","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8dd90b8c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Homepage_container__2xaGR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"parent\":\"TikTacToe_parent__3Vi_m\",\"container\":\"TikTacToe_container__29_kB\",\"row\":\"TikTacToe_row__2iWTZ\",\"col\":\"TikTacToe_col__62zmA\",\"reset\":\"TikTacToe_reset__3YPA5\",\"disable\":\"TikTacToe_disable__2jV5L\",\"back\":\"TikTacToe_back__2kE1s\"};","import React from 'react';\nimport s from './index.module.scss';\n// import cross from '../../images/cross.png'\n\nexport default class TikTacToe extends React.PureComponent {\n  state = {\n    value: null\n  }\n\n  boxClick = () => {\n    let value = this.props.lastValue[0] === 'X' ? '0' : 'X';\n    if (this.props.canModified === this.props.id && this.state.value) {\n      value = '';\n    } else if (this.props.canModified !== this.props.id && this.state.value) {\n      return false;\n    }\n    this.setState({\n      value\n    })\n    this.props.setFilledValue(this.props.id, value)\n  }\n\n  render() {\n    return <div className={s.col} onClick={this.boxClick}>\n      <span>{this.state.value}</span>\n    </div>\n  }\n\n}","const checkWinner = (arr) => {\n\n  let winner = false;\n\n  const winnerArray = ['00,01,02', '00,10,20', '00,11,22', '01,11,21', '10,11,12', '02,12,22', '20,21,22', '02,11,20']\n\n  winnerArray.forEach(winners => {\n\n    const indexes = winners.split(',');\n\n    const id00 = indexes[0][0];\n    const id01 = indexes[0][1];\n    const id10 = indexes[1][0];\n    const id11 = indexes[1][1];\n    const id20 = indexes[2][0];\n    const id21 = indexes[2][1];\n\n    if (arr[id00][id01] === arr[id10][id11] &&\n      arr[id10][id11] === arr[id20][id21] &&\n      arr[id00][id01] === arr[id20][id21] && arr[id00][id01] === 'X') {\n      winner = 'X'\n      return;\n    }\n    if (arr[id00][id01] === arr[id10][id11] &&\n      arr[id10][id11] === arr[id20][id21] &&\n      arr[id00][id01] === arr[id20][id21] && arr[id00][id01] === '0') {\n      winner = '0'\n      return;\n    }\n  })\n\n  return winner;\n\n}\n\nexport { checkWinner }","import React from 'react';\nimport s from './index.module.scss';\nimport Box from './Box';\nimport { checkWinner } from './winner';\n\nexport default class TikTacToe extends React.PureComponent {\n\n  boxArr = ['0', '1', '2'];\n\n  state = {\n    canModified: '',\n    lastValue: ['X'],\n    filledArray: [\n      ['', '', ''],\n      ['', '', ''],\n      ['', '', '']\n    ],\n    winner: false\n  }\n\n  backupState = { ...this.state }\n\n  resetIt = () => {\n    this.setState(this.backupState)\n    this.boxArr = [];\n  }\n\n  back = () => {\n    window.history.back()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.canModified && this.state.canModified === '') {\n      this.boxArr = ['0', '1', '2'];\n      this.forceUpdate();\n    }\n  }\n\n  setFilledValue = (id, value) => {\n    const filledArray = [...this.state.filledArray]\n    const lastValue = [...this.state.lastValue]\n\n    const row = Number(id[0]);\n    const col = Number(id[1]);\n\n    filledArray[row][col] = value;\n    if (value) {\n      lastValue.push(value)\n    } else {\n      lastValue.pop();\n    }\n\n    this.setState({\n      filledArray,\n      canModified: id,\n      lastValue\n    })\n\n    if (lastValue.length > 5) {\n      const winner = checkWinner(filledArray);\n      winner && this.setState({\n        winner\n      })\n    }\n  }\n\n  render() {\n    return <div className={s.parent}>\n      <div className={this.state.winner === false ? s.container : `${s.container + ' ' + s.disable}`}>\n        {\n          this.boxArr.map((row) => {\n            return <div className={s.row} key={row}>\n              {\n                this.boxArr.map((col) => {\n                  return <Box\n                    key={col + row}\n                    id={col + row}\n                    canModified={this.state.canModified}\n                    lastValue={this.state.lastValue.slice(-1)}\n                    setFilledValue={this.setFilledValue}\n                  />\n                })\n              }\n            </div>\n          })\n        }\n      </div>\n      <button className={s.reset} onClick={this.resetIt}>RESET</button>\n      {this.state.winner && <h2>Winner is {this.state.winner}</h2>}\n      <button className={s.back} onClick={this.back}>Back to Home</button>\n    </div >\n  }\n}","import React from \"react\";\nimport s from './index.module.scss';\nimport {\n  Link\n} from \"react-router-dom\";\n\nexport default class Homepage extends React.PureComponent {\n\n  render() {\n    return <div className={s.container}>\n      <h2>Homepage</h2>\n      <ul>\n        <li><Link to='/tiktactoe'>Tic Tak Toe</Link></li>\n      </ul>\n    </div>\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport TikTacToe from '../components/TikTacToe'\nimport Homepage from '../components/Homepage';\n\nexport default class Routes extends React.PureComponent {\n  render() {\n    return (\n      <Router basename='/swapp'>\n        <Switch>\n          <Route exact path=\"/\">\n            <Homepage />\n          </Route>\n\n          <Route path=\"/tiktactoe\">\n            <TikTacToe />\n          </Route>\n\n        </Switch>\n      </Router>\n    )\n  }\n}","import React from 'react';\nimport Routes from './routes/Routes';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}