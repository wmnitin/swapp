{"version":3,"sources":["components/shared/MoveToHome.module.scss","components/Homepage/index.module.scss","components/TikTacToe/Box.js","components/TikTacToe/winner.js","components/shared/MoveToHome.js","components/TikTacToe/index.js","components/Homepage/index.js","components/TwoZeroFourEight/index.js","routes/Routes.js","App.js","serviceWorker.js","index.js","components/TikTacToe/index.module.scss"],"names":["module","exports","TikTacToe","state","value","boxClick","props","lastValue","canModified","id","setState","setFilledValue","className","s","col","onClick","this","React","PureComponent","checkWinner","arr","winner","forEach","winners","indexes","split","id00","id01","id10","id11","id20","id21","back","window","history","boxArr","filledArray","resetIt","location","reload","row","Number","push","pop","length","parent","container","disable","map","key","slice","reset","MoveToHome","Homepage","to","TwoZeroFourEight","GameManager","size","InputManager","Actuator","inputManager","actuator","startTiles","on","move","bind","restart","setup","Grid","cells","build","HTMLActuator","tileContainer","document","getElementsByClassName","messageContainer","score","KeyboardInputManager","events","listen","Tile","position","x","y","previousPosition","mergedFrom","requestAnimationFrame","prototype","grid","over","won","addStartTiles","actuate","i","addRandomTile","cellsAvailable","Math","random","tile","randomAvailableCell","insertTile","prepareTiles","eachCell","savePosition","moveTile","cell","updatePosition","direction","self","vector","getVector","traversals","buildTraversals","moved","cellContent","positions","findFarthestPosition","next","merged","removeTile","farthest","positionsEqual","movesAvailable","0","1","2","3","pos","reverse","previous","withinBounds","cellAvailable","tileMatchesAvailable","other","first","second","availableCells","floor","callback","cellOccupied","metadata","clearContainer","column","addTile","message","clearMessage","firstChild","removeChild","element","createElement","positionClass","classes","applyClasses","textContent","appendChild","setAttribute","join","normalizePosition","type","classList","add","getElementsByTagName","remove","event","emit","data","callbacks","38","39","40","37","75","76","74","72","addEventListener","modifiers","altKey","ctrlKey","metaKey","shiftKey","mapped","which","undefined","preventDefault","gestures","Hammer","DIRECTION_UP","DIRECTION_RIGHT","DIRECTION_DOWN","DIRECTION_LEFT","gameContainer","drag_block_horizontal","drag_block_vertical","indexOf","Routes","basename","exact","path","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.323c745f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"back\":\"MoveToHome_back__1Hwob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Homepage_container__2xaGR\"};","import React from 'react';\nimport s from './index.module.scss';\n// import cross from '../../images/cross.png'\n\nexport default class TikTacToe extends React.PureComponent {\n  state = {\n    value: null\n  }\n\n  boxClick = () => {\n    let value = this.props.lastValue[0] === 'X' ? '0' : 'X';\n    if (this.props.canModified === this.props.id && this.state.value) {\n      value = '';\n    } else if (this.props.canModified !== this.props.id && this.state.value) {\n      return false;\n    }\n    this.setState({\n      value\n    })\n    this.props.setFilledValue(this.props.id, value)\n  }\n\n  render() {\n    return <div className={s.col} onClick={this.boxClick}>\n      <span>{this.state.value}</span>\n    </div>\n  }\n\n}","const checkWinner = (arr) => {\n\n  let winner = false;\n\n  const winnerArray = ['00,01,02', '00,10,20', '00,11,22', '01,11,21', '10,11,12', '02,12,22', '20,21,22', '02,11,20']\n\n  winnerArray.forEach(winners => {\n\n    const indexes = winners.split(',');\n\n    const id00 = indexes[0][0];\n    const id01 = indexes[0][1];\n    const id10 = indexes[1][0];\n    const id11 = indexes[1][1];\n    const id20 = indexes[2][0];\n    const id21 = indexes[2][1];\n\n    if (arr[id00][id01] === arr[id10][id11] &&\n      arr[id10][id11] === arr[id20][id21] &&\n      arr[id00][id01] === arr[id20][id21] && arr[id00][id01] === 'X') {\n      winner = 'X'\n      return;\n    }\n    if (arr[id00][id01] === arr[id10][id11] &&\n      arr[id10][id11] === arr[id20][id21] &&\n      arr[id00][id01] === arr[id20][id21] && arr[id00][id01] === '0') {\n      winner = '0'\n      return;\n    }\n  })\n\n  return winner;\n\n}\n\nexport { checkWinner }","import React from 'react';\nimport s from './MoveToHome.module.scss';\n\nconst back = () => {\n  window.history.back()\n}\n\nexport default () =>{\n  return <button className={s.back} onClick={back}>Back to Home</button>\n}","import React from 'react';\nimport s from './index.module.scss';\nimport Box from './Box';\nimport { checkWinner } from './winner';\nimport MoveToHome from '../shared/MoveToHome';\n\nexport default class TikTacToe extends React.PureComponent {\n\n  boxArr = ['0', '1', '2'];\n\n  state = {\n    canModified: '',\n    lastValue: ['X'],\n    filledArray: [\n      ['', '', ''],\n      ['', '', ''],\n      ['', '', '']\n    ],\n    winner: false\n  }\n\n  resetIt = () => {\n    window.location.reload();\n  }\n\n  setFilledValue = (id, value) => {\n    const filledArray = [...this.state.filledArray]\n    const lastValue = [...this.state.lastValue]\n\n    const row = Number(id[0]);\n    const col = Number(id[1]);\n\n    filledArray[row][col] = value;\n    if (value) {\n      lastValue.push(value)\n    } else {\n      lastValue.pop();\n    }\n\n    this.setState({\n      filledArray,\n      canModified: id,\n      lastValue\n    })\n\n    if (lastValue.length > 5) {\n      const winner = checkWinner(filledArray);\n      winner && this.setState({\n        winner\n      })\n    }\n  }\n\n  render() {\n    return <div className={s.parent}>\n      <div className={this.state.winner === false ? s.container : `${s.container + ' ' + s.disable}`}>\n        {\n          this.boxArr.map((row) => {\n            return <div className={s.row} key={row}>\n              {\n                this.boxArr.map((col) => {\n                  return <Box\n                    key={col + row}\n                    id={col + row}\n                    canModified={this.state.canModified}\n                    lastValue={this.state.lastValue.slice(-1)}\n                    setFilledValue={this.setFilledValue}\n                  />\n                })\n              }\n            </div>\n          })\n        }\n      </div>\n      <button className={s.reset} onClick={this.resetIt}>RESET</button>\n      {this.state.winner && <h2>Winner is {this.state.winner}</h2>}\n      <MoveToHome />\n    </div >\n  }\n}","import React from \"react\";\nimport s from './index.module.scss';\nimport {\n  Link\n} from \"react-router-dom\";\n\nexport default class Homepage extends React.PureComponent {\n\n  render() {\n    return <div className={s.container}>\n      <h2>Select Games to play</h2>\n      <ul>\n        <li><Link to='/tiktactoe'>Tic Tak Toe</Link></li>\n        <li><Link to='/twozerofoureight'>2048</Link></li>\n      </ul>\n    </div>\n  }\n}\n","import React from 'react';\n/* eslint-disable */\nimport './index.scss'\nimport MoveToHome from '../shared/MoveToHome';\n\nexport default class TwoZeroFourEight extends React.PureComponent {\n\n  componentDidMount() {\n    /* eslint-disable */\n    window.requestAnimationFrame(function () {\n      var manager = new GameManager(4, KeyboardInputManager, HTMLActuator);\n    });\n\n    function GameManager(size, InputManager, Actuator) {\n      this.size = size; // Size of the grid\n      this.inputManager = new InputManager();\n      this.actuator = new Actuator();\n\n      this.startTiles = 2;\n\n      this.inputManager.on(\"move\", this.move.bind(this));\n      this.inputManager.on(\"restart\", this.restart.bind(this));\n\n      this.setup();\n    }\n\n    // Restart the game\n    GameManager.prototype.restart = function () {\n      this.actuator.restart();\n      this.setup();\n    };\n\n    // Set up the game\n    GameManager.prototype.setup = function () {\n      this.grid = new Grid(this.size);\n\n      this.score = 0;\n      this.over = false;\n      this.won = false;\n\n      // Add the initial tiles\n      this.addStartTiles();\n\n      // Update the actuator\n      this.actuate();\n    };\n\n    // Set up the initial tiles to start the game with\n    GameManager.prototype.addStartTiles = function () {\n      for (var i = 0; i < this.startTiles; i++) {\n        this.addRandomTile();\n      }\n    };\n\n    // Adds a tile in a random position\n    GameManager.prototype.addRandomTile = function () {\n      if (this.grid.cellsAvailable()) {\n        var value = Math.random() < 0.9 ? 2 : 4;\n        var tile = new Tile(this.grid.randomAvailableCell(), value);\n\n        this.grid.insertTile(tile);\n      }\n    };\n\n    // Sends the updated grid to the actuator\n    GameManager.prototype.actuate = function () {\n      this.actuator.actuate(this.grid, {\n        score: this.score,\n        over: this.over,\n        won: this.won\n      });\n    };\n\n    // Save all tile positions and remove merger info\n    GameManager.prototype.prepareTiles = function () {\n      this.grid.eachCell(function (x, y, tile) {\n        if (tile) {\n          tile.mergedFrom = null;\n          tile.savePosition();\n        }\n      });\n    };\n\n    // Move a tile and its representation\n    GameManager.prototype.moveTile = function (tile, cell) {\n      this.grid.cells[tile.x][tile.y] = null;\n      this.grid.cells[cell.x][cell.y] = tile;\n      tile.updatePosition(cell);\n    };\n\n    // Move tiles on the grid in the specified direction\n    GameManager.prototype.move = function (direction) {\n      // 0: up, 1: right, 2:down, 3: left\n      var self = this;\n\n      if (this.over || this.won) return; // Don't do anything if the game's over\n\n      var cell, tile;\n\n      var vector = this.getVector(direction);\n      var traversals = this.buildTraversals(vector);\n      var moved = false;\n\n      // Save the current tile positions and remove merger information\n      this.prepareTiles();\n\n      // Traverse the grid in the right direction and move tiles\n      traversals.x.forEach(function (x) {\n        traversals.y.forEach(function (y) {\n          cell = { x: x, y: y };\n          tile = self.grid.cellContent(cell);\n\n          if (tile) {\n            var positions = self.findFarthestPosition(cell, vector);\n            var next = self.grid.cellContent(positions.next);\n\n            // Only one merger per row traversal?\n            if (next && next.value === tile.value && !next.mergedFrom) {\n              var merged = new Tile(positions.next, tile.value * 2);\n              merged.mergedFrom = [tile, next];\n\n              self.grid.insertTile(merged);\n              self.grid.removeTile(tile);\n\n              // Converge the two tiles' positions\n              tile.updatePosition(positions.next);\n\n              // Update the score\n              self.score += merged.value;\n\n              // The mighty 2048 tile\n              if (merged.value === 2048) self.won = true;\n            } else {\n              self.moveTile(tile, positions.farthest);\n            }\n\n            if (!self.positionsEqual(cell, tile)) {\n              moved = true; // The tile moved from its original cell!\n            }\n          }\n        });\n      });\n\n      if (moved) {\n        this.addRandomTile();\n\n        if (!this.movesAvailable()) {\n          this.over = true; // Game over!\n        }\n\n        this.actuate();\n      }\n    };\n\n    // Get the vector representing the chosen direction\n    GameManager.prototype.getVector = function (direction) {\n      // Vectors representing tile movement\n      var map = {\n        0: { x: 0, y: -1 }, // up\n        1: { x: 1, y: 0 }, // right\n        2: { x: 0, y: 1 }, // down\n        3: { x: -1, y: 0 } // left\n      };\n\n      return map[direction];\n    };\n\n    // Build a list of positions to traverse in the right order\n    GameManager.prototype.buildTraversals = function (vector) {\n      var traversals = { x: [], y: [] };\n\n      for (var pos = 0; pos < this.size; pos++) {\n        traversals.x.push(pos);\n        traversals.y.push(pos);\n      }\n\n      // Always traverse from the farthest cell in the chosen direction\n      if (vector.x === 1) traversals.x = traversals.x.reverse();\n      if (vector.y === 1) traversals.y = traversals.y.reverse();\n\n      return traversals;\n    };\n\n    GameManager.prototype.findFarthestPosition = function (cell, vector) {\n      var previous;\n\n      // Progress towards the vector direction until an obstacle is found\n      do {\n        previous = cell;\n        cell = { x: previous.x + vector.x, y: previous.y + vector.y };\n      } while (this.grid.withinBounds(cell) && this.grid.cellAvailable(cell));\n\n      return {\n        farthest: previous,\n        next: cell // Used to check if a merge is required\n      };\n    };\n\n    GameManager.prototype.movesAvailable = function () {\n      return this.grid.cellsAvailable() || this.tileMatchesAvailable();\n    };\n\n    // Check for available matches between tiles (more expensive check)\n    GameManager.prototype.tileMatchesAvailable = function () {\n      var self = this;\n\n      var tile;\n\n      for (var x = 0; x < this.size; x++) {\n        for (var y = 0; y < this.size; y++) {\n          tile = this.grid.cellContent({ x: x, y: y });\n\n          if (tile) {\n            for (var direction = 0; direction < 4; direction++) {\n              var vector = self.getVector(direction);\n              var cell = { x: x + vector.x, y: y + vector.y };\n\n              var other = self.grid.cellContent(cell);\n              if (other) {\n              }\n\n              if (other && other.value === tile.value) {\n                return true; // These two tiles can be merged\n              }\n            }\n          }\n        }\n      }\n\n      return false;\n    };\n\n    GameManager.prototype.positionsEqual = function (first, second) {\n      return first.x === second.x && first.y === second.y;\n    };\n\n    function Grid(size) {\n      this.size = size;\n\n      this.cells = [];\n\n      this.build();\n    }\n\n    // Build a grid of the specified size\n    Grid.prototype.build = function () {\n      for (var x = 0; x < this.size; x++) {\n        var row = (this.cells[x] = []);\n\n        for (var y = 0; y < this.size; y++) {\n          row.push(null);\n        }\n      }\n    };\n\n    // Find the first available random position\n    Grid.prototype.randomAvailableCell = function () {\n      var cells = this.availableCells();\n\n      if (cells.length) {\n        return cells[Math.floor(Math.random() * cells.length)];\n      }\n    };\n\n    Grid.prototype.availableCells = function () {\n      var cells = [];\n\n      this.eachCell(function (x, y, tile) {\n        if (!tile) {\n          cells.push({ x: x, y: y });\n        }\n      });\n\n      return cells;\n    };\n\n    // Call callback for every cell\n    Grid.prototype.eachCell = function (callback) {\n      for (var x = 0; x < this.size; x++) {\n        for (var y = 0; y < this.size; y++) {\n          callback(x, y, this.cells[x][y]);\n        }\n      }\n    };\n\n    // Check if there are any cells available\n    Grid.prototype.cellsAvailable = function () {\n      return !!this.availableCells().length;\n    };\n\n    // Check if the specified cell is taken\n    Grid.prototype.cellAvailable = function (cell) {\n      return !this.cellOccupied(cell);\n    };\n\n    Grid.prototype.cellOccupied = function (cell) {\n      return !!this.cellContent(cell);\n    };\n\n    Grid.prototype.cellContent = function (cell) {\n      if (this.withinBounds(cell)) {\n        return this.cells[cell.x][cell.y];\n      } else {\n        return null;\n      }\n    };\n\n    // Inserts a tile at its position\n    Grid.prototype.insertTile = function (tile) {\n      this.cells[tile.x][tile.y] = tile;\n    };\n\n    Grid.prototype.removeTile = function (tile) {\n      this.cells[tile.x][tile.y] = null;\n    };\n\n    Grid.prototype.withinBounds = function (position) {\n      return (\n        position.x >= 0 &&\n        position.x < this.size &&\n        position.y >= 0 &&\n        position.y < this.size\n      );\n    };\n\n    function HTMLActuator() {\n      this.tileContainer = document.getElementsByClassName(\"tile-container\")[0];\n      // this.scoreContainer = document.getElementsByClassName(\"score-container\")[0];\n      this.messageContainer = document.getElementsByClassName(\"game-message\")[0];\n\n      this.score = 0;\n    }\n\n    HTMLActuator.prototype.actuate = function (grid, metadata) {\n      var self = this;\n\n      window.requestAnimationFrame(function () {\n        self.clearContainer(self.tileContainer);\n\n        grid.cells.forEach(function (column) {\n          column.forEach(function (cell) {\n            if (cell) {\n              self.addTile(cell);\n            }\n          });\n        });\n\n        // self.updateScore(metadata.score);\n\n        if (metadata.over) self.message(false); // You lose\n        if (metadata.won) self.message(true); // You win!\n      });\n    };\n\n    HTMLActuator.prototype.restart = function () {\n      this.clearMessage();\n    };\n\n    HTMLActuator.prototype.clearContainer = function (container) {\n      while (container.firstChild) {\n        container.removeChild(container.firstChild);\n      }\n    };\n\n    HTMLActuator.prototype.addTile = function (tile) {\n      var self = this;\n\n      var element = document.createElement(\"div\");\n      var position = tile.previousPosition || { x: tile.x, y: tile.y };\n      var positionClass = this.positionClass(position);\n\n      // We can't use classlist because it somehow glitches when replacing classes\n      var classes = [\"tile\", \"tile-\" + tile.value, positionClass];\n      this.applyClasses(element, classes);\n\n      element.textContent = tile.value;\n\n      if (tile.previousPosition) {\n        // Make sure that the tile gets rendered in the previous position first\n        window.requestAnimationFrame(function () {\n          classes[2] = self.positionClass({ x: tile.x, y: tile.y });\n          self.applyClasses(element, classes); // Update the position\n        });\n      } else if (tile.mergedFrom) {\n        classes.push(\"tile-merged\");\n        this.applyClasses(element, classes);\n\n        // Render the tiles that merged\n        tile.mergedFrom.forEach(function (merged) {\n          self.addTile(merged);\n        });\n      } else {\n        classes.push(\"tile-new\");\n        this.applyClasses(element, classes);\n      }\n\n      // Put the tile on the board\n      this.tileContainer.appendChild(element);\n    };\n\n    HTMLActuator.prototype.applyClasses = function (element, classes) {\n      element.setAttribute(\"class\", classes.join(\" \"));\n    };\n\n    HTMLActuator.prototype.normalizePosition = function (position) {\n      return { x: position.x + 1, y: position.y + 1 };\n    };\n\n    HTMLActuator.prototype.positionClass = function (position) {\n      position = this.normalizePosition(position);\n      return \"tile-position-\" + position.x + \"-\" + position.y;\n    };\n\n    // HTMLActuator.prototype.updateScore = function (score) {\n    //   this.clearContainer(this.scoreContainer);\n\n    //   var difference = score - this.score;\n    //   this.score = score;\n\n    //   this.scoreContainer.textContent = this.score;\n\n    //   if (difference > 0) {\n    //     var addition = document.createElement(\"div\");\n    //     addition.classList.add(\"score-addition\");\n    //     addition.textContent = \"+\" + difference;\n\n    //     this.scoreContainer.appendChild(addition);\n    //   }\n    // };\n\n    HTMLActuator.prototype.message = function (won) {\n      var type = won ? \"game-won\" : \"game-over\";\n      var message = won ? \"You win!\" : \"Game over!\";\n\n      // if (ga) ga(\"send\", \"event\", \"game\", \"end\", type, this.score);\n\n      this.messageContainer.classList.add(type);\n      this.messageContainer.getElementsByTagName(\"p\")[0].textContent = message;\n    };\n\n    HTMLActuator.prototype.clearMessage = function () {\n      this.messageContainer.classList.remove(\"game-won\", \"game-over\");\n    };\n\n    function KeyboardInputManager() {\n      this.events = {};\n\n      this.listen();\n    }\n\n    KeyboardInputManager.prototype.on = function (event, callback) {\n      if (!this.events[event]) {\n        this.events[event] = [];\n      }\n      this.events[event].push(callback);\n    };\n\n    KeyboardInputManager.prototype.emit = function (event, data) {\n      var callbacks = this.events[event];\n      if (callbacks) {\n        callbacks.forEach(function (callback) {\n          callback(data);\n        });\n      }\n    };\n\n    KeyboardInputManager.prototype.listen = function () {\n      var self = this;\n\n      var map = {\n        38: 0, // Up\n        39: 1, // Right\n        40: 2, // Down\n        37: 3, // Left\n        75: 0, // vim keybindings\n        76: 1,\n        74: 2,\n        72: 3\n      };\n\n      document.addEventListener(\"keydown\", function (event) {\n        var modifiers =\n          event.altKey || event.ctrlKey || event.metaKey || event.shiftKey;\n        var mapped = map[event.which];\n\n        if (!modifiers) {\n          if (mapped !== undefined) {\n            event.preventDefault();\n            self.emit(\"move\", mapped);\n          }\n\n          if (event.which === 32) self.restart.bind(self)(event);\n        }\n      });\n\n      var retry = document.getElementsByClassName(\"retry-button\")[0];\n      retry.addEventListener(\"click\", this.restart.bind(this));\n\n      // Listen to swipe events\n      var gestures = [\n        Hammer.DIRECTION_UP,\n        Hammer.DIRECTION_RIGHT,\n        Hammer.DIRECTION_DOWN,\n        Hammer.DIRECTION_LEFT\n      ];\n\n      var gameContainer = document.getElementsByClassName(\"game-container\")[0];\n      var handler = Hammer(gameContainer, {\n        drag_block_horizontal: true,\n        drag_block_vertical: true\n      });\n\n      handler.on(\"swipe\", (event) => {\n        var mapped = gestures.indexOf(event.direction);\n        if (mapped !== -1) self.emit(\"move\", mapped);\n      });\n    };\n\n    KeyboardInputManager.prototype.restart = function (event) {\n      event.preventDefault();\n      this.emit(\"restart\");\n    };\n\n    function Tile(position, value) {\n      this.x = position.x;\n      this.y = position.y;\n      this.value = value || 2;\n\n      this.previousPosition = null;\n      this.mergedFrom = null; // Tracks tiles that merged together\n    }\n\n    Tile.prototype.savePosition = function () {\n      this.previousPosition = { x: this.x, y: this.y };\n    };\n\n    Tile.prototype.updatePosition = function (position) {\n      this.x = position.x;\n      this.y = position.y;\n    };\n\n  }\n\n  render() {\n    return (\n      <div className=\"gameAppContainer\">\n        <div className=\"game-container\">\n          <div className=\"game-message\">\n            <p></p>\n            <div className=\"lower\">\n              <a className=\"retry-button\" >Try again</a>\n            </div>\n          </div>\n\n          <div className=\"grid-container\">\n            <div className=\"grid-row\">\n              <div className=\"grid-cell\"></div>\n              <div className=\"grid-cell\"></div>\n              <div className=\"grid-cell\"></div>\n              <div className=\"grid-cell\"></div>\n            </div>\n            <div className=\"grid-row\">\n              <div className=\"grid-cell\"></div>\n              <div className=\"grid-cell\"></div>\n              <div className=\"grid-cell\"></div>\n              <div className=\"grid-cell\"></div>\n            </div>\n            <div className=\"grid-row\">\n              <div className=\"grid-cell\"></div>\n              <div className=\"grid-cell\"></div>\n              <div className=\"grid-cell\"></div>\n              <div className=\"grid-cell\"></div>\n            </div>\n            <div className=\"grid-row\">\n              <div className=\"grid-cell\"></div>\n              <div className=\"grid-cell\"></div>\n              <div className=\"grid-cell\"></div>\n              <div className=\"grid-cell\"></div>\n            </div>\n          </div>\n          <div className=\"tile-container\">\n          </div>\n        </div>\n        <MoveToHome />\n      </div>\n    )\n  }\n\n}","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n// import loadable from \"@loadable/component\";\n\nimport TikTacToe from '../components/TikTacToe'\nimport Homepage from '../components/Homepage';\nimport TwoZeroFourEight from '../components/TwoZeroFourEight';\nexport default class Routes extends React.PureComponent {\n  render() {\n    return (\n      <Router basename='/swapp'>\n        <Switch>\n          <Route exact path=\"/\">\n            <Homepage />\n          </Route>\n\n          <Route path=\"/tiktactoe\">\n            <TikTacToe />\n          </Route>\n\n\n          <Route path=\"/twozerofoureight\">\n            <TwoZeroFourEight />\n          </Route>\n\n        </Switch>\n      </Router>\n    )\n  }\n}","import React from 'react';\nimport Routes from './routes/Routes';\nimport 'hammerjs/hammer';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import hammer from 'hammerjs';\n\n// window.Hammer = hammer;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"parent\":\"TikTacToe_parent__3Vi_m\",\"container\":\"TikTacToe_container__29_kB\",\"row\":\"TikTacToe_row__2iWTZ\",\"col\":\"TikTacToe_col__62zmA\",\"reset\":\"TikTacToe_reset__3YPA5\",\"disable\":\"TikTacToe_disable__2jV5L\"};"],"sourceRoot":""}